// ====================================================================================================
//
// Cloud Code for CloudModule2, write your code here to customize the GameSparks platform.
//
// For details of the GameSparks Cloud Code API see https://docs.gamesparks.com/
//
// ====================================================================================================
const EMPTY_PIECE = 0;
const HEARTS_PIECE = 1;
const SKULLS_PIECE = 2;

//?????? ?????????? ??????? createBoard, ??????? ??????? ? ?????????? ????? ??????.
var createBoard = function(challengeID) {
    return {};
};
//?????? ??? ???????????? ?????? ?????, ??? ????? ???????????????? ??? ??????? ??????. ???????? ?????????????, createFields ? ????????? ??????? ? ???????? ????????????? ??????????????? ????? ?????????? return.
var createBoard = function(challengeID) {

    // …

    var initialize = function() {
        var challenge = Spark.getChallenge(challengeID);
        fields = challenge.getScriptData(FIELDS_DATA_NAME);
        if (fields === null) {
            createFields();
            saveFields();
        }
    };

    var createFields = function() {
        fields = [];
        var fieldCount = BOARD_SIZE * BOARD_SIZE;
        for (var i = 0; i < fieldCount ; i++) {
            fields.push(EMPTY_PIECE);
        }
    };

    var saveFields = function() {
        var challenge = Spark.getChallenge(challengeID);
        challenge.setScriptData(FIELDS_DATA_NAME, fields);
    };

    initialize();
    return {};
};

//?????? ??? ?????? ????? ???????? ???????, ??????? ????????? ?????????? ??????? ?? ???? ????????? ????????????, ??????? ? ???????? ?????????. ???????? ??????? checkWinConditions ?????? ?? ?????? ???????????: checkHorizontal, checkVertical, checkFirstDiagonal ? checkSecondDiagonal. ?? ???????? ???????? checkWinConditions ? ???????? ????????? ? ????????? ?????? GameSparks
var createBoard = function(challengeID) {

    // …

    var checkWinConditions = function(x, y) {
        var originalPiece = getField(x, y);
        return checkHorizontal(x, y, originalPiece) || checkVertical(x, y, originalPiece) || checkFirstDiagonal(x, y, originalPiece) || checkSecondDiagonal(x, y, originalPiece);
    };

    var checkHorizontal = function(x, y, originalPiece) {
        var consecutivePieces = 1 + countRecursivelyInDirection(x, y, -1, 0, originalPiece) + countRecursivelyInDirection(x, y, 1, 0, originalPiece);
        return consecutivePieces === CONSECUTIVE_PIECES_NEEDED;
    };

    var checkVertical = function(x, y, originalPiece) {
        var consecutivePieces = 1 + countRecursivelyInDirection(x, y, 0, -1, originalPiece) + countRecursivelyInDirection(x, y, 0, 1, originalPiece);
        return consecutivePieces === CONSECUTIVE_PIECES_NEEDED;
    };

    var checkFirstDiagonal = function(x, y, originalPiece) {
        var consecutivePieces = 1 + countRecursivelyInDirection(x, y, -1, 1, originalPiece) + countRecursivelyInDirection(x, y, 1, -1, originalPiece);
        return consecutivePieces === CONSECUTIVE_PIECES_NEEDED;
    };

    var checkSecondDiagonal = function(x, y, originalPiece) {
        var consecutivePieces = 1 + countRecursivelyInDirection(x, y, -1, -1, originalPiece) + countRecursivelyInDirection(x, y, 1, 1, originalPiece);
        return consecutivePieces === CONSECUTIVE_PIECES_NEEDED;
    };

    // …

    return {
        tryMove : tryMove,
        isPositionValid : isPositionValid,
        checkWinConditions : checkWinConditions
    };
};